service: thumbnail-service

frameworkVersion: '2'

package:
  exclude:
    - node_modules/**
    - venv/**

custom:
  pythonRequirements:
    dockerImage: python:3.7-stretch
    dockerizePip: true
    noDeploy: []
    useDownloadCache: false
    useStaticCache: false
    zip: true
    slim: true
    strip: false
  bucketTarget: badico-s3-course
  bucketThumbnail: badico-s3-thumbnails
  serverless-offline:
    httpsProtocol: "dev-certs"
    httpPort: 3000
    host: "0.0.0.0"
  
provider:
  name: aws
  runtime: python3.7
  region: us-east-1
  lambdaHashingVersion: "20201221"
  environment:
    BUCKET_THUMBNAIL: "${self:custom.bucketThumbnail}"
    BUCKET_TARGET: "${self:custom.bucketTarget}"
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
      Resource: "arn:aws:s3:::${self:custom.bucketThumbnail}/*"
    - Effect: 'Allow'
      Action:
        - "s3:GetObject"
        - "s3:GetObjectAcl"
      Resource: "arn:aws:s3:::${self:custom.bucketTarget}/*"

plugins:
  - serverless-python-requirements
  - serverless-offline
functions:
  create_thumbnail:
    handler: src/create_thumbnail.handler
    events:
      - s3:
          bucket: "${self:custom.bucketTarget}"
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpg
          existing: true
      - s3:
          bucket: "${self:custom.bucketTarget}"
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpeg
          existing: true
      - s3:
          bucket: "${self:custom.bucketTarget}"
          event: s3:ObjectCreated:*
          rules:
            - suffix: .png
          existing: true
